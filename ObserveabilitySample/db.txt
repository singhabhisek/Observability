import pyodbc

# Database connection function
def get_db_connection():
    conn_str = r'DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=path\to\yourdatabase.mdb;'
    return pyodbc.connect(conn_str)

# Common function to execute a query and return results
def execute_query(query, params=None, fetch_all=True):
    """
    Execute a database query and return results.

    :param query: SQL query as a string
    :param params: Tuple or list of query parameters (optional)
    :param fetch_all: If True, fetches all rows; otherwise, fetches one row
    :return: List of dictionaries representing result rows or a single row
    """
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        
        # Execute query with or without parameters
        if params:
            cursor.execute(query, params)
        else:
            cursor.execute(query)

        # Fetch results
        columns = [column[0] for column in cursor.description]
        results = [dict(zip(columns, row)) for row in cursor.fetchall()] if fetch_all else dict(zip(columns, cursor.fetchone()))

        conn.close()
        return results
    except Exception as e:
        return {"error": str(e)}



from flask import Flask, request, jsonify

app = Flask(__name__)

# Route to get distinct transactions
@app.route('/get_transactions', methods=['GET'])
def get_transactions():
    query = "SELECT DISTINCT trxName FROM record"
    results = execute_query(query)
    return jsonify(results)

# Route to fetch filtered data based on test_id and transactions
@app.route('/get_filtered_data', methods=['POST'])
def get_filtered_data():
    data = request.json
    test_id = data.get('test_id')
    selected_trx = data.get('transactions')

    if not selected_trx:
        return jsonify({"error": "No transactions selected"})

    # Construct query dynamically
    placeholders = ', '.join(['?'] * len(selected_trx))
    query = f"SELECT * FROM record WHERE testID = ? AND trxName IN ({placeholders})"
    params = [test_id] + selected_trx

    results = execute_query(query, params)
    return jsonify(results)

if __name__ == '__main__':
    app.run(debug=True)





===============



from flask import Flask, render_template, request, jsonify
import pyodbc

app = Flask(__name__)

# Database connection function
def get_db_connection():
    conn_str = r'DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=path\to\yourdatabase.mdb;'
    return pyodbc.connect(conn_str)

# Fetch distinct transaction names for select2 dropdown
@app.route('/get_transactions', methods=['GET'])
def get_transactions():
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT DISTINCT trxName FROM record")
        transactions = [row[0] for row in cursor.fetchall()]
        conn.close()
        return jsonify(transactions)
    except Exception as e:
        return jsonify({"error": str(e)})

# Fetch records based on selected transactions and test ID
@app.route('/get_filtered_data', methods=['POST'])
def get_filtered_data():
    try:
        data = request.json
        test_id = data.get('test_id')
        selected_trx = data.get('transactions')

        if not selected_trx:
            return jsonify({"error": "No transactions selected"})

        conn = get_db_connection()
        cursor = conn.cursor()
        
        query = f"SELECT * FROM record WHERE testID = ? AND trxName IN ({', '.join(['?'] * len(selected_trx))})"
        params = [test_id] + selected_trx
        cursor.execute(query, params)
        
        records = [dict(zip([column[0] for column in cursor.description], row)) for row in cursor.fetchall()]
        conn.close()
        
        return jsonify(records)
    except Exception as e:
        return jsonify({"error": str(e)})

@app.route('/')
def index():
    return render_template('index.html')

if __name__ == '__main__':
    app.run(debug=True)


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flask Select2 Multi-Select</title>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
</head>
<body>

    <label for="test_id">Enter Test ID:</label>
    <input type="text" id="test_id">

    <label for="trx_select">Select Transactions:</label>
    <select id="trx_select" multiple="multiple" style="width: 50%"></select>

    <button id="fetch_data">Fetch Data</button>

    <div id="results"></div>

    <script>
        $(document).ready(function() {
            // Initialize Select2
            $('#trx_select').select2({
                placeholder: "Select transactions",
                allowClear: true
            });

            // Fetch transactions and populate select2 dropdown
            $.get('/get_transactions', function(data) {
                data.forEach(function(item) {
                    $('#trx_select').append(new Option(item, item));
                });
            });

            // Fetch filtered records based on user selection
            $('#fetch_data').click(function() {
                let testID = $('#test_id').val();
                let selectedTransactions = $('#trx_select').val();

                $.ajax({
                    url: '/get_filtered_data',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ test_id: testID, transactions: selectedTransactions }),
                    success: function(response) {
                        $('#results').html(JSON.stringify(response, null, 2));
                    }
                });
            });
        });
    </script>

</body>
</html>
